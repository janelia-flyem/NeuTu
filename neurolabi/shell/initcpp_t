#!/bin/bash


if [[ $# -lt 2 ]]
then
  echo "Usage: $0 <dst_dir> <project>"
  exit 1
fi

dstdir=$1
project=$2
projectDir="$dstdir/$project"

mkdir "$projectDir"
if [[ $? -eq 0 ]]
then
  set -e 
  cd "$projectDir"
  mkdir include
  mkdir src
  echo 'cmake_minimum_required(VERSION 3.5)' > CMakeLists.txt
  echo "project($project)" >> CMakeLists.txt
  echo "set(CMAKE_CXX_STANDARD 11)" >> CMakeLists.txt
  echo "set(CMAKE_CXX_STANDARD_REQUIRED ON)" >> CMakeLists.txt
  echo "set(CMAKE_CXX_EXTENSIONS OFF)" >> CMakeLists.txt
  echo "" >> CMakeLists.txt
  echo "add_library($project SHARED <src/source.cpp>)" >> CMakeLists.txt
  echo "" >> CMakeLists.txt
  echo "target_include_directories($project PUBLIC \${PROJECT_SOURCE_DIR}/include)" >> CMakeLists.txt
  echo "" >> CMakeLists.txt
  echo "install(TARGETS $project LIBRARY DESTINATION lib)" >> CMakeLists.txt
  echo "install(DIRECTORY \${PROJECT_SOURCE_DIR}/include/ DESTINATION include)" >> CMakeLists.txt
  echo "" >> CMakeLists.txt
  echo "option(PACKAGE_TESTS "Build the tests" ON)" >> CMakeLists.txt
  echo "if (PACKAGE_TESTS)" >> CMakeLists.txt
  echo "  enable_testing()" >> CMakeLists.txt
  echo "  add_subdirectory(tests)" >> CMakeLists.txt
  echo "endif()" >> CMakeLists.txt

  mkdir tests
  cd tests
  echo "find_package(GTest REQUIRED)" > CMakeLists.txt
  echo "" >> CMakeLists.txt
  echo "add_executable(<exec> <src.cpp>)" >> CMakeLists.txt
  echo "target_include_directories(<exec> PRIVATE \${GTEST_INCLUDE_DIRS})" >> CMakeLists.txt
  echo "target_link_libraries(<exec> ${project} \${GTEST_BOTH_LIBRARIES})" >> CMakeLists.txt
  echo "add_test(AllTests <exec>)" >> CMakeLists.txt
  
else
  echo "Failed to ceate a new project directory: $projectDir."


fi

 
